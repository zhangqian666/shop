<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zack.mapper.ProductPayInfoMapper">
  <resultMap id="BaseResultMap" type="com.zack.model.ProductPayInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="pay_platform" jdbcType="INTEGER" property="payPlatform" />
    <result column="platform_number" jdbcType="VARCHAR" property="platformNumber" />
    <result column="platform_status" jdbcType="VARCHAR" property="platformStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_pay_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zack.model.ProductPayInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_pay_info (user_id, order_no, pay_platform, 
      platform_number, platform_status, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{payPlatform,jdbcType=INTEGER}, 
      #{platformNumber,jdbcType=VARCHAR}, #{platformStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zack.model.ProductPayInfo">
    update product_pay_info
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=BIGINT},
      pay_platform = #{payPlatform,jdbcType=INTEGER},
      platform_number = #{platformNumber,jdbcType=VARCHAR},
      platform_status = #{platformStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, order_no, pay_platform, platform_number, platform_status, create_time, 
    update_time
    from product_pay_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, order_no, pay_platform, platform_number, platform_status, create_time, 
    update_time
    from product_pay_info
  </select>
</mapper>